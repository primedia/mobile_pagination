{"name":"Mobile pagination","tagline":"","body":"mobile_pagination\r\n=========\r\n[![Code Climate](https://codeclimate.com/github/primedia/mobile_pagination.png)](https://codeclimate.com/github/primedia/mobile_pagination)\r\n[![Build Status](https://travis-ci.org/primedia/mobile_pagination.png)](https://travis-ci.org/primedia/mobile_pagination)\r\n[![Coverage Status](https://coveralls.io/repos/primedia/mobile_pagination/badge.png?branch=dev)](https://coveralls.io/r/primedia/mobile_pagination?branch=dev)\r\n[![Dependency Status](https://gemnasium.com/primedia/mobile_pagination.png)](https://gemnasium.com/primedia/mobile_pagination)\r\n[![Gem Version](https://badge.fury.io/rb/mobile_pagination.png)](http://badge.fury.io/rb/mobile_pagination)\r\n\r\n## Installation\r\n\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'mobile_pagination'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install mobile_pagination\r\n\r\n\r\n## Usage\r\nInitializes with 4 options: `current_page, total_pages, query, path`\r\n\r\n```ruby\r\n# in your view, you may have something like this:\r\nol\r\n  = pagination\r\n\r\n# in your helpers, you might have something like:\r\n\r\nrequire 'mobile_pagination'\r\n\r\n# http://local.m.newhomeguide.com/New-Homes/Georgia/Atlanta/?page=2\r\n\r\ndef opts\r\n  {\r\n    :current_page => params[:page],         # => 2\r\n    :total_pages  => total_pages,           # => Int for total pages\r\n    :query        => request.query_string,  # => 'page=2'\r\n    :path         => request.path           # => '/New-Homes/Georgia/Atlanta/'\r\n  }\r\nend\r\n\r\ndef pagination\r\n  MobilePagination::Paginate.new(opts).html\r\nend\r\n\r\n```\r\n\r\n### Overrides\r\n\r\nIf you don't like list items, you will need to override `MobilePagination::Templates`\r\n\r\nJust add this to the bottom of one of your view helpers:\r\n\r\n```ruby\r\nmodule MobilePagination\r\n  module Templates\r\n\r\n    def first_page_html\r\n      \"<p'>\r\n        <a title='First Page' href='#{first_page_link}'>Luke's Page</a> |\r\n      <p>\"\r\n    end\r\n\r\n    def previous_page_html\r\n      \"<h1>\r\n        <a title='Previous Page' href='#{previous_page_link}'>Previous Page</a> |\r\n      </h1>\"\r\n    end\r\n\r\n    def next_page_html\r\n      \"<span>\r\n        <a title='Next Page' href='#{next_page_link}'>Next Page</a> |\r\n      </span>\"\r\n    end\r\n\r\n    def last_page_html\r\n      \"<h3>\r\n        <a title='Last Page' href='#{last_page_link}'>Last Page</a>\r\n      </h3>\"\r\n    end\r\n\r\n  end\r\nend\r\n```\r\n### Configuration\r\nConfiguration is optional.\r\n\r\nSay for example you were paginating slides on a slideshow - instead of using page, you could configure the gem to use a different key.\r\n\r\n```ruby\r\nMobilePagination.configure do |config|\r\n  config.page_key = 'slide'\r\nend\r\n```\r\n\r\nConfiguration must run prior to initialization. The resulting pagination links will now contain `/?slide=2, /?slide=3` to suit your custom url structure. The default page_key is `page`.\r\n\r\nPlease note, any methods ending in `_link` will need to remain, as these methods are responsible for generating the paginated urls.\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## Running the Tests\r\n\r\n`rake`\r\n\r\nThere is a default `spec` task that will run.\r\n\r\n\r\n## License\r\n\r\nmobile_pagination is released under the MIT License. See the bundled LICENSE file for details.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}